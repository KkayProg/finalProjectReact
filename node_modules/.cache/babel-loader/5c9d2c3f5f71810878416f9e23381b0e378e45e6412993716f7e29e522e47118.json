{"ast":null,"code":"var _jsxFileName = \"/Users/kirillonucin/Desktop/finalProjectReact/src/components/randomMovie/AboutRandomMovie.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchRundomMovie } from \"../../store/randomMovieSlice\";\nimport { fetchMovieById } from \"../../store/movieSliсe\";\nimport styles from './randomMovie.module.css';\nimport Rating from \"../ui/rating/Rating\";\nimport RandomMovieButtons from \"./RandomMovieButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AboutRandomMovie = ({\n  buttons,\n  id\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    data: randomMovie,\n    loading: randomLoading,\n    error: randomError\n  } = useSelector(state => state.movieRandom || {\n    data: null,\n    loading: false,\n    error: null\n  });\n  const {\n    data: selectedMovie,\n    loading: selectedLoading,\n    error: selectedError\n  } = useSelector(state => state.movieById || {\n    data: null,\n    loading: false,\n    error: null\n  });\n  const [isFetched, setIsFetched] = useState(false);\n  useEffect(() => {\n    if (id) {\n      const movieId = String(id); // Преобразуем id в строку\n      dispatch(fetchMovieById(movieId)); // Запрос по id\n    } else if (!randomMovie && !isFetched) {\n      dispatch(fetchRundomMovie()); // Запрос случайного фильма, если нет id и фильм не был загружен\n      setIsFetched(true);\n    }\n  }, [dispatch, id, randomMovie, isFetched]);\n  const movie = id ? selectedMovie : randomMovie;\n  const loading = id ? selectedLoading : randomLoading;\n  const error = id ? selectedError : randomError;\n  const formatTime = minutes => {\n    const hours = Math.floor(minutes / 60);\n    const min = minutes % 60;\n    return hours === 0 ? `${min}мин` : `${hours}ч ${min}мин`;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 23\n  }, this);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Movie not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.randomMovie__container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.randomMovie__left,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dopInfo,\n        children: [/*#__PURE__*/_jsxDEV(Rating, {\n          rating: movie.tmdbRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.genres ? movie.genres.join(', ') : 'Не указаны жанры'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.releaseYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatTime(movie.runtime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.mainInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.mainInfo__title,\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.mainInfo__description,\n          children: movie.plot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RandomMovieButtons, {\n        onRefresh: () => dispatch(fetchRundomMovie()),\n        data: movie,\n        buttons: buttons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), movie.posterUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.randomMovie__right,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.posterUrl,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(AboutRandomMovie, \"xWdJOIdrE3gq2rHjsgsCAuYTOjY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = AboutRandomMovie;\nexport default AboutRandomMovie;\nvar _c;\n$RefreshReg$(_c, \"AboutRandomMovie\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","fetchRundomMovie","fetchMovieById","styles","Rating","RandomMovieButtons","jsxDEV","_jsxDEV","AboutRandomMovie","buttons","id","_s","dispatch","data","randomMovie","loading","randomLoading","error","randomError","state","movieRandom","selectedMovie","selectedLoading","selectedError","movieById","isFetched","setIsFetched","movieId","String","movie","formatTime","minutes","hours","Math","floor","min","children","fileName","_jsxFileName","lineNumber","columnNumber","className","randomMovie__container","randomMovie__left","dopInfo","rating","tmdbRating","genres","join","releaseYear","runtime","mainInfo","mainInfo__title","title","mainInfo__description","plot","onRefresh","posterUrl","randomMovie__right","src","alt","_c","$RefreshReg$"],"sources":["/Users/kirillonucin/Desktop/finalProjectReact/src/components/randomMovie/AboutRandomMovie.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchRundomMovie } from \"../../store/randomMovieSlice\";\nimport { fetchMovieById } from \"../../store/movieSliсe\";\nimport { AppDispatch } from \"../../store/store\";\nimport MovieData from \"../../types/mainTypes\";\nimport styles from './randomMovie.module.css';\nimport Rating from \"../ui/rating/Rating\";\nimport RandomMovieButtons from \"./RandomMovieButtons\";\n\ninterface RootState {\n    movieRandom: {\n        data: MovieData | null;\n        loading: boolean;\n        error: string | null;\n    };\n    movieById: {\n        data: MovieData | null;\n        loading: boolean;\n        error: string | null;\n    };\n}\n\nconst AboutRandomMovie = ({ buttons, id }: { buttons: boolean, id?: string }) => {\n    const dispatch = useDispatch<AppDispatch>();\n\n    const { data: randomMovie, loading: randomLoading, error: randomError } = useSelector(\n        (state: RootState) => state.movieRandom || { data: null, loading: false, error: null }\n    );\n    const { data: selectedMovie, loading: selectedLoading, error: selectedError } = useSelector(\n        (state: RootState) => state.movieById || { data: null, loading: false, error: null }\n    );\n\n    const [isFetched, setIsFetched] = useState(false);\n\n    useEffect(() => {\n        if (id) {\n            const movieId = String(id); // Преобразуем id в строку\n            dispatch(fetchMovieById(movieId)); // Запрос по id\n        } else if (!randomMovie && !isFetched) {\n            dispatch(fetchRundomMovie()); // Запрос случайного фильма, если нет id и фильм не был загружен\n            setIsFetched(true);\n        }\n    }, [dispatch, id, randomMovie, isFetched]);\n\n    const movie = id ? selectedMovie : randomMovie;\n    const loading = id ? selectedLoading : randomLoading;\n    const error = id ? selectedError : randomError;\n\n    const formatTime = (minutes: number): string => {\n        const hours = Math.floor(minutes / 60);\n        const min = minutes % 60;\n        return hours === 0 ? `${min}мин` : `${hours}ч ${min}мин`;\n    };\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error}</p>;\n    if (!movie) return <p>Movie not found</p>;\n\n    return (\n        <div className={styles.randomMovie__container}>\n            <div className={styles.randomMovie__left}>\n                <div className={styles.dopInfo}>\n                    <Rating rating={movie.tmdbRating} />\n                    <span>{movie.genres ? movie.genres.join(', ') : 'Не указаны жанры'}</span>\n                    <span>{movie.releaseYear}</span>\n                    <span>{formatTime(movie.runtime)}</span>\n                </div>\n                <div className={styles.mainInfo}>\n                    <h2 className={styles.mainInfo__title}>{movie.title}</h2>\n                    <p className={styles.mainInfo__description}>{movie.plot}</p>\n                </div>\n                <RandomMovieButtons onRefresh={() => dispatch(fetchRundomMovie())} data={movie} buttons={buttons} />\n            </div>\n            {movie.posterUrl && (\n                <div className={styles.randomMovie__right}>\n                <img src={movie.posterUrl} alt={movie.title} />\n            </div>\n            )}\n        </div>\n    );\n};\n\nexport default AboutRandomMovie;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}