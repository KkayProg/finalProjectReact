{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchMovieById = createAsyncThunk(\"movie/fetchMovieById\", async id => {\n  const response = await axios.get(`https://cinemaguide.skillbox.cc/movie/${id}`);\n  return response.data;\n});\nconst movieSlice = createSlice({\n  name: \"movie\",\n  initialState: {\n    data: null,\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchMovieById.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchMovieById.fulfilled, (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    }).addCase(fetchMovieById.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Ошибка загрузки фильма\";\n    });\n  }\n});\nexport default movieSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchMovieById","id","response","get","data","movieSlice","name","initialState","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/Users/kirillonucin/Desktop/react_project/Project/my-app/src/store/movieSliсe.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport MovieData from \"../types/mainTypes\";\n\nexport const fetchMovieById = createAsyncThunk<MovieData, string>(\n    \"movie/fetchMovieById\",\n    async (id) => {\n        const response = await axios.get(`https://cinemaguide.skillbox.cc/movie/${id}`);\n        return response.data;\n    }\n);\n\nconst movieSlice = createSlice({\n    name: \"movie\",\n    initialState: {\n        data: null as MovieData | null,\n        loading: false,\n        error: null as string | null,\n    },\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchMovieById.pending, (state) => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addCase(fetchMovieById.fulfilled, (state, action) => {\n                state.loading = false;\n                state.data = action.payload;\n            })\n            .addCase(fetchMovieById.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.error.message || \"Ошибка загрузки фильма\";\n            });\n    },\n});\n\nexport default movieSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAC1C,sBAAsB,EACtB,MAAOG,EAAE,IAAK;EACV,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,yCAAyCF,EAAE,EAAE,CAAC;EAC/E,OAAOC,QAAQ,CAACE,IAAI;AACxB,CACJ,CAAC;AAED,MAAMC,UAAU,GAAGR,WAAW,CAAC;EAC3BS,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVH,IAAI,EAAE,IAAwB;IAC9BI,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACb,cAAc,CAACc,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAACP,OAAO,GAAG,IAAI;MACpBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDI,OAAO,CAACb,cAAc,CAACgB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACX,IAAI,GAAGa,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACb,cAAc,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO,IAAI,wBAAwB;IAClE,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAef,UAAU,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}