{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  data: null,\n  loading: false,\n  error: null\n};\nexport const fetchRundomMovie = createAsyncThunk('movie/fetcRandomhMovie', async () => {\n  const response = await axios.get('https://cinemaguide.skillbox.cc/movie/random');\n  return response.data;\n});\nconst randomMovieSlice = createSlice({\n  name: 'movieRandom',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchRundomMovie.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchRundomMovie.fulfilled, (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    }).addCase(fetchRundomMovie.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || 'Failed to load movie';\n    });\n  }\n});\nexport default randomMovieSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","data","loading","error","fetchRundomMovie","response","get","randomMovieSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/Users/kirillonucin/Desktop/finalProjectReact/src/store/randomMovieSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport MovieData from \"../types/mainTypes\";\nimport axios from \"axios\";\n\ninterface MovieState {\n    data: MovieData | null;\n    loading: boolean;\n    error: string | null;\n}\n\nconst initialState: MovieState = {\n    data: null,\n    loading: false,\n    error: null,\n}\n\nexport const fetchRundomMovie = createAsyncThunk('movie/fetcRandomhMovie', async () => {\n    const response = await axios.get('https://cinemaguide.skillbox.cc/movie/random');\n    return response.data;\n});\n\nconst randomMovieSlice = createSlice({\n    name: 'movieRandom',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchRundomMovie.pending, (state) => {\n                state.loading = true;\n                state.error = null;\n            })\n            .addCase(fetchRundomMovie.fulfilled, (state, action) => {\n                state.loading = false;\n                state.data = action.payload;\n            })\n            .addCase(fetchRundomMovie.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.error.message || 'Failed to load movie';\n            });\n    },\n});\n\nexport default randomMovieSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAOC,KAAK,MAAM,OAAO;AAQzB,MAAMC,YAAwB,GAAG;EAC7BC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGP,gBAAgB,CAAC,wBAAwB,EAAE,YAAY;EACnF,MAAMQ,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,8CAA8C,CAAC;EAChF,OAAOD,QAAQ,CAACJ,IAAI;AACxB,CAAC,CAAC;AAEF,MAAMM,gBAAgB,GAAGT,WAAW,CAAC;EACjCU,IAAI,EAAE,aAAa;EACnBR,YAAY;EACZS,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACR,gBAAgB,CAACS,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAACZ,OAAO,GAAG,IAAI;MACpBY,KAAK,CAACX,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDS,OAAO,CAACR,gBAAgB,CAACW,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpDF,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACb,IAAI,GAAGe,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACR,gBAAgB,CAACc,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnDF,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACX,KAAK,GAAGa,MAAM,CAACb,KAAK,CAACgB,OAAO,IAAI,sBAAsB;IAChE,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeZ,gBAAgB,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}