{"ast":null,"code":"import{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{fetchRundomMovie}from\"../../store/randomMovieSlice\";import{fetchMovieById}from\"../../store/movieSliсe\";import styles from'./randomMovie.module.css';import Rating from\"../ui/rating/Rating\";import RandomMovieButtons from\"./RandomMovieButtons\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AboutRandomMovie=_ref=>{let{buttons,id}=_ref;const dispatch=useDispatch();const{data:randomMovie,loading:randomLoading,error:randomError}=useSelector(state=>state.movieRandom||{data:null,loading:false,error:null});const{data:selectedMovie,loading:selectedLoading,error:selectedError}=useSelector(state=>state.movieById||{data:null,loading:false,error:null});const[isFetched,setIsFetched]=useState(false);useEffect(()=>{if(id){const movieId=String(id);// Преобразуем id в строку\ndispatch(fetchMovieById(movieId));// Запрос по id\n}else if(!randomMovie&&!isFetched){dispatch(fetchRundomMovie());// Запрос случайного фильма, если нет id и фильм не был загружен\nsetIsFetched(true);}},[dispatch,id,randomMovie,isFetched]);const movie=id?selectedMovie:randomMovie;const loading=id?selectedLoading:randomLoading;const error=id?selectedError:randomError;const formatTime=minutes=>{const hours=Math.floor(minutes/60);const min=minutes%60;return hours===0?`${min}мин`:`${hours}ч ${min}мин`;};if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});if(error)return/*#__PURE__*/_jsxs(\"p\",{children:[\"Error: \",error]});if(!movie)return/*#__PURE__*/_jsx(\"p\",{children:\"Movie not found\"});return/*#__PURE__*/_jsxs(\"div\",{className:styles.randomMovie__container,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.randomMovie__left,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.dopInfo,children:[/*#__PURE__*/_jsx(Rating,{rating:movie.tmdbRating}),/*#__PURE__*/_jsx(\"span\",{children:movie.genres?movie.genres.join(', '):'Не указаны жанры'}),/*#__PURE__*/_jsx(\"span\",{children:movie.releaseYear}),/*#__PURE__*/_jsx(\"span\",{children:formatTime(movie.runtime)})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.mainInfo,children:[/*#__PURE__*/_jsx(\"h2\",{className:styles.mainInfo__title,children:movie.title}),/*#__PURE__*/_jsx(\"p\",{className:styles.mainInfo__description,children:movie.plot})]}),/*#__PURE__*/_jsx(RandomMovieButtons,{onRefresh:()=>dispatch(fetchRundomMovie()),data:movie,buttons:buttons})]}),movie.posterUrl&&/*#__PURE__*/_jsx(\"div\",{className:styles.randomMovie__right,children:/*#__PURE__*/_jsx(\"img\",{src:movie.posterUrl,alt:movie.title})})]});};export default AboutRandomMovie;","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","fetchRundomMovie","fetchMovieById","styles","Rating","RandomMovieButtons","jsx","_jsx","jsxs","_jsxs","AboutRandomMovie","_ref","buttons","id","dispatch","data","randomMovie","loading","randomLoading","error","randomError","state","movieRandom","selectedMovie","selectedLoading","selectedError","movieById","isFetched","setIsFetched","movieId","String","movie","formatTime","minutes","hours","Math","floor","min","children","className","randomMovie__container","randomMovie__left","dopInfo","rating","tmdbRating","genres","join","releaseYear","runtime","mainInfo","mainInfo__title","title","mainInfo__description","plot","onRefresh","posterUrl","randomMovie__right","src","alt"],"sources":["/Users/kirillonucin/Desktop/finalProjectReact/src/components/randomMovie/AboutRandomMovie.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchRundomMovie } from \"../../store/randomMovieSlice\";\nimport { fetchMovieById } from \"../../store/movieSliсe\";\nimport { AppDispatch } from \"../../store/store\";\nimport MovieData from \"../../types/mainTypes\";\nimport styles from './randomMovie.module.css';\nimport Rating from \"../ui/rating/Rating\";\nimport RandomMovieButtons from \"./RandomMovieButtons\";\n\ninterface RootState {\n    movieRandom: {\n        data: MovieData | null;\n        loading: boolean;\n        error: string | null;\n    };\n    movieById: {\n        data: MovieData | null;\n        loading: boolean;\n        error: string | null;\n    };\n}\n\nconst AboutRandomMovie = ({ buttons, id }: { buttons: boolean, id?: string }) => {\n    const dispatch = useDispatch<AppDispatch>();\n\n    const { data: randomMovie, loading: randomLoading, error: randomError } = useSelector(\n        (state: RootState) => state.movieRandom || { data: null, loading: false, error: null }\n    );\n    const { data: selectedMovie, loading: selectedLoading, error: selectedError } = useSelector(\n        (state: RootState) => state.movieById || { data: null, loading: false, error: null }\n    );\n\n    const [isFetched, setIsFetched] = useState(false);\n\n    useEffect(() => {\n        if (id) {\n            const movieId = String(id); // Преобразуем id в строку\n            dispatch(fetchMovieById(movieId)); // Запрос по id\n        } else if (!randomMovie && !isFetched) {\n            dispatch(fetchRundomMovie()); // Запрос случайного фильма, если нет id и фильм не был загружен\n            setIsFetched(true);\n        }\n    }, [dispatch, id, randomMovie, isFetched]);\n\n    const movie = id ? selectedMovie : randomMovie;\n    const loading = id ? selectedLoading : randomLoading;\n    const error = id ? selectedError : randomError;\n\n    const formatTime = (minutes: number): string => {\n        const hours = Math.floor(minutes / 60);\n        const min = minutes % 60;\n        return hours === 0 ? `${min}мин` : `${hours}ч ${min}мин`;\n    };\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error}</p>;\n    if (!movie) return <p>Movie not found</p>;\n\n    return (\n        <div className={styles.randomMovie__container}>\n            <div className={styles.randomMovie__left}>\n                <div className={styles.dopInfo}>\n                    <Rating rating={movie.tmdbRating} />\n                    <span>{movie.genres ? movie.genres.join(', ') : 'Не указаны жанры'}</span>\n                    <span>{movie.releaseYear}</span>\n                    <span>{formatTime(movie.runtime)}</span>\n                </div>\n                <div className={styles.mainInfo}>\n                    <h2 className={styles.mainInfo__title}>{movie.title}</h2>\n                    <p className={styles.mainInfo__description}>{movie.plot}</p>\n                </div>\n                <RandomMovieButtons onRefresh={() => dispatch(fetchRundomMovie())} data={movie} buttons={buttons} />\n            </div>\n            {movie.posterUrl && (\n                <div className={styles.randomMovie__right}>\n                <img src={movie.posterUrl} alt={movie.title} />\n            </div>\n            )}\n        </div>\n    );\n};\n\nexport default AboutRandomMovie;\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,gBAAgB,KAAQ,8BAA8B,CAC/D,OAASC,cAAc,KAAQ,wBAAwB,CAGvD,MAAO,CAAAC,MAAM,KAAM,0BAA0B,CAC7C,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,kBAAkB,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAetD,KAAM,CAAAC,gBAAgB,CAAGC,IAAA,EAAwD,IAAvD,CAAEC,OAAO,CAAEC,EAAsC,CAAC,CAAAF,IAAA,CACxE,KAAM,CAAAG,QAAQ,CAAGf,WAAW,CAAc,CAAC,CAE3C,KAAM,CAAEgB,IAAI,CAAEC,WAAW,CAAEC,OAAO,CAAEC,aAAa,CAAEC,KAAK,CAAEC,WAAY,CAAC,CAAGpB,WAAW,CAChFqB,KAAgB,EAAKA,KAAK,CAACC,WAAW,EAAI,CAAEP,IAAI,CAAE,IAAI,CAAEE,OAAO,CAAE,KAAK,CAAEE,KAAK,CAAE,IAAK,CACzF,CAAC,CACD,KAAM,CAAEJ,IAAI,CAAEQ,aAAa,CAAEN,OAAO,CAAEO,eAAe,CAAEL,KAAK,CAAEM,aAAc,CAAC,CAAGzB,WAAW,CACtFqB,KAAgB,EAAKA,KAAK,CAACK,SAAS,EAAI,CAAEX,IAAI,CAAE,IAAI,CAAEE,OAAO,CAAE,KAAK,CAAEE,KAAK,CAAE,IAAK,CACvF,CAAC,CAED,KAAM,CAACQ,SAAS,CAAEC,YAAY,CAAC,CAAG9B,QAAQ,CAAC,KAAK,CAAC,CAEjDD,SAAS,CAAC,IAAM,CACZ,GAAIgB,EAAE,CAAE,CACJ,KAAM,CAAAgB,OAAO,CAAGC,MAAM,CAACjB,EAAE,CAAC,CAAE;AAC5BC,QAAQ,CAACZ,cAAc,CAAC2B,OAAO,CAAC,CAAC,CAAE;AACvC,CAAC,IAAM,IAAI,CAACb,WAAW,EAAI,CAACW,SAAS,CAAE,CACnCb,QAAQ,CAACb,gBAAgB,CAAC,CAAC,CAAC,CAAE;AAC9B2B,YAAY,CAAC,IAAI,CAAC,CACtB,CACJ,CAAC,CAAE,CAACd,QAAQ,CAAED,EAAE,CAAEG,WAAW,CAAEW,SAAS,CAAC,CAAC,CAE1C,KAAM,CAAAI,KAAK,CAAGlB,EAAE,CAAGU,aAAa,CAAGP,WAAW,CAC9C,KAAM,CAAAC,OAAO,CAAGJ,EAAE,CAAGW,eAAe,CAAGN,aAAa,CACpD,KAAM,CAAAC,KAAK,CAAGN,EAAE,CAAGY,aAAa,CAAGL,WAAW,CAE9C,KAAM,CAAAY,UAAU,CAAIC,OAAe,EAAa,CAC5C,KAAM,CAAAC,KAAK,CAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAG,EAAE,CAAC,CACtC,KAAM,CAAAI,GAAG,CAAGJ,OAAO,CAAG,EAAE,CACxB,MAAO,CAAAC,KAAK,GAAK,CAAC,CAAG,GAAGG,GAAG,KAAK,CAAG,GAAGH,KAAK,KAAKG,GAAG,KAAK,CAC5D,CAAC,CAED,GAAIpB,OAAO,CAAE,mBAAOV,IAAA,MAAA+B,QAAA,CAAG,YAAU,CAAG,CAAC,CACrC,GAAInB,KAAK,CAAE,mBAAOV,KAAA,MAAA6B,QAAA,EAAG,SAAO,CAACnB,KAAK,EAAI,CAAC,CACvC,GAAI,CAACY,KAAK,CAAE,mBAAOxB,IAAA,MAAA+B,QAAA,CAAG,iBAAe,CAAG,CAAC,CAEzC,mBACI7B,KAAA,QAAK8B,SAAS,CAAEpC,MAAM,CAACqC,sBAAuB,CAAAF,QAAA,eAC1C7B,KAAA,QAAK8B,SAAS,CAAEpC,MAAM,CAACsC,iBAAkB,CAAAH,QAAA,eACrC7B,KAAA,QAAK8B,SAAS,CAAEpC,MAAM,CAACuC,OAAQ,CAAAJ,QAAA,eAC3B/B,IAAA,CAACH,MAAM,EAACuC,MAAM,CAAEZ,KAAK,CAACa,UAAW,CAAE,CAAC,cACpCrC,IAAA,SAAA+B,QAAA,CAAOP,KAAK,CAACc,MAAM,CAAGd,KAAK,CAACc,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC,CAAG,kBAAkB,CAAO,CAAC,cAC1EvC,IAAA,SAAA+B,QAAA,CAAOP,KAAK,CAACgB,WAAW,CAAO,CAAC,cAChCxC,IAAA,SAAA+B,QAAA,CAAON,UAAU,CAACD,KAAK,CAACiB,OAAO,CAAC,CAAO,CAAC,EACvC,CAAC,cACNvC,KAAA,QAAK8B,SAAS,CAAEpC,MAAM,CAAC8C,QAAS,CAAAX,QAAA,eAC5B/B,IAAA,OAAIgC,SAAS,CAAEpC,MAAM,CAAC+C,eAAgB,CAAAZ,QAAA,CAAEP,KAAK,CAACoB,KAAK,CAAK,CAAC,cACzD5C,IAAA,MAAGgC,SAAS,CAAEpC,MAAM,CAACiD,qBAAsB,CAAAd,QAAA,CAAEP,KAAK,CAACsB,IAAI,CAAI,CAAC,EAC3D,CAAC,cACN9C,IAAA,CAACF,kBAAkB,EAACiD,SAAS,CAAEA,CAAA,GAAMxC,QAAQ,CAACb,gBAAgB,CAAC,CAAC,CAAE,CAACc,IAAI,CAAEgB,KAAM,CAACnB,OAAO,CAAEA,OAAQ,CAAE,CAAC,EACnG,CAAC,CACLmB,KAAK,CAACwB,SAAS,eACZhD,IAAA,QAAKgC,SAAS,CAAEpC,MAAM,CAACqD,kBAAmB,CAAAlB,QAAA,cAC1C/B,IAAA,QAAKkD,GAAG,CAAE1B,KAAK,CAACwB,SAAU,CAACG,GAAG,CAAE3B,KAAK,CAACoB,KAAM,CAAE,CAAC,CAC9C,CACJ,EACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAAzC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}